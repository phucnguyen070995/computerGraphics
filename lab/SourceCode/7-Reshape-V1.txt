#include <windows.h>
#include <math.h>
#include <GL/glut.h>

#define		M_PI		3.1415926

void display(void)
{
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glViewport(0, 0, 500, 500);

	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
	gluLookAt(1.5, 1.5, 1.5, 0, 0, 0, 0.0, 1.0, 0.0);

	float	c = M_PI/180.0;
	float	phir, phir20, theta, thetar;
	float	x, y, z;
	float	angle = 5;

	for(float phi = -90+angle; phi<=90-angle; phi+=angle)
	{
		phir = c*phi;
		phir20 = c*(phi+angle);
		glBegin(GL_QUAD_STRIP);
		for(float theta = -180; theta<=180; theta+=angle)
		{
			thetar = c*theta;
			x = sin(thetar)*cos(phir);
			z = cos(thetar)*cos(phir);
			y = sin(phir);
			glVertex3d(x, y, z);
			x = sin(thetar)*cos(phir20);
			z = cos(thetar)*cos(phir20);
			y = sin(phir20);
			glVertex3d(x, y, z);
		}
		glEnd();
	}

	float	c80;

	glBegin(GL_TRIANGLE_FAN);
		glVertex3d(0, 1, 0);
		c80 = c*(90-angle);
		y = sin(c80);
		for(float theta = 180; theta>=-180; theta-=angle)
		{
			thetar = c*theta;
			x = sin(thetar)*cos(c80);
			z = cos(thetar)*cos(c80);
			glVertex3d(x, y, z);
		}
	glEnd();

	glBegin(GL_TRIANGLE_FAN);
		glVertex3d(0, -1, 0);
		c80 = c*(90-angle);
		y = -sin(c80);
		for(theta = -180; theta<=180; theta+=angle)
		{
			thetar = c*theta;
			x = sin(thetar)*cos(c80);
			z = cos(thetar)*cos(c80);
			glVertex3d(x, y, z);
		}
	glEnd();

	glFlush();
}

void init()
{
    glClearColor (1.0, 1.0, 1.0, 1.0);
    glColor3f (0.0, 0.0, 0.0);
	glPolygonMode(GL_FRONT_AND_BACK, GL_LINE);
	glFrontFace(GL_CW);
	glEnable(GL_CULL_FACE);

	glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    glOrtho(-2, 2, -2 , 2, -10.0, 10.0);

}

int  main(int argc, char **argv)
{
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB | GLUT_DEPTH);
    glutInitWindowSize(500, 500);
    glutCreateWindow("Reshape - Version 1");
    init();

    glutDisplayFunc(display);

    glutMainLoop();
    return 0;
}

